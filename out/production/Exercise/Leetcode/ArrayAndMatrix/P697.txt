public class P697 {
    public int findShortestSubArray(int[] nums) {
        Map<Integer, Integer> numsCnt = new HashMap<>();
        Map<Integer, Integer> numsFirstIndex = new HashMap<>();
        Map<Integer, Integer> numsLastIndex = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            int num = nums[i];
            numsCnt.put(num, numsCnt.getOrDefault(num, 0) + 1);
            numsLastIndex.put(num, i);
            if (!numsFirstIndex.containsKey(num)) {
                numsFirstIndex.put(num, i);
            }
        }
        int maxCnt = 0;
        for (int num : nums) {
            maxCnt = Math.max(maxCnt, numsCnt.get(num));
        }
        int ret = Integer.MAX_VALUE;
        for (int num : nums) {
            if (numsCnt.get(num) == maxCnt) {
                ret = Math.min(ret, numsLastIndex.get(num) - numsFirstIndex.get(num) + 1);
            }
        }
        return ret;
    }
}