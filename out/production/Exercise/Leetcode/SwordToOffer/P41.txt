public class P41 {

    private PriorityQueue<Integer> minHeap;
    private PriorityQueue<Integer> maxHeap;

    public P41() {
        minHeap = new PriorityQueue<>();
        maxHeap = new PriorityQueue<>(new Comparator<Integer>() {
            @Override
            public int compare(int o1, int o2) {
                return o2 - o1;
            }
        });
    }

    public void insert(int k) {
        if (minHeap.size() == 0 || minHeap.size() == maxHeap.size()) {
            maxHeap.add(k);
            minHeap.add(maxHeap.poll());
        }
        else {
            minHeap.add(k);
            maxHeap.add(minHeap.poll());
        }
    }

    public double getMedian() {
        if (minHeap.size() == 0)
            return -1.0;
        if (minHeap.size() == maxHeap.size()) {
            return (minHeap.peek() + maxHeap.peek()) / 2.0;
        }
        else {
            return minHeap.peek();
        }
    }
}