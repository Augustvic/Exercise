public class P51 {
    private int[] helper;

    public int reversePairs(int[] nums) {
        helper = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            helper[i] = nums[i];
        }
        return merge(nums, 0, nums.length - 1);
    }

    private int merge(int[] nums, int l, int r) {
        if (l >= r) {
            return 0;
        }
        int mid = l + (r - l) / 2;
        int cl = merge(nums, l, mid);
        int cr = merge(nums, mid + 1, r);
        System.arraycopy(nums, l, helper, l, r - l + 1);
        int count = 0;
        int p1 = mid;
        int p2 = r;
        int index = r;
        while (p1 >= l && p2 >= mid + 1) {
            if (helper[p1] > helper[p2]) {
                count += (p2 - mid);
                nums[index--] = helper[p1--];
            } else {
                nums[index--] = helper[p2--];
            }
        }
        while (p1 >= l) {
            nums[index--] = helper[p1--];
        }
        while (p2 >= mid + 1) {
            nums[index--] = helper[p2--];
        }
        return count + cl + cr;
    }
}