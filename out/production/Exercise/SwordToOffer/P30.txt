public class P30 {

     private Stack<Integer> dataSt;
     private Stack<Integer> minSt;

     public P30() {
         dataSt = new Stack<>();
         minSt = new Stack<>();
     }

    public int min() {
        if (!minSt.isEmpty())
            return minSt.peek();
        else
            throw new NullPointerException();
    }

    public void push(int val) {
        dataSt.push(val);
        if (minSt.isEmpty() || val < minSt.peek())
            minSt.push(val);
        else
            minSt.push(minSt.peek());
    }

    public int pop() {
        if (!dataSt.isEmpty()) {
            minSt.pop();
            return dataSt.pop();
        }
        else
            throw new NullPointerException();
    }
}