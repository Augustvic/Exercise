public class P39 {
    public int moreThanHalfOptimal(int[] nums) {
        if (nums == null || nums.length == 0)
            return 0;
        int times = 0;
        int num = nums[0];
        for (int i = 1; i < nums.length; i++) {
            if (times == 0) {
                num = nums[i];
                times = 1;
            }
            else {
                if (nums[i] == num)
                    times++;
                else
                    times--;
            }
        }
        return check(nums, num) ? num : 0;
    }

    private boolean check(int[] nums, int num) {
        int count = 0;
        int half = nums.length / 2;
        for (int k : nums) {
            if (k == num)
                count++;
            if (count > half)
                return true;
        }
        return false;
    }
}