public class P33 {
    public boolean isPostOrderOfBST(int[] nums) {
        if (nums == null || nums.length == 0)
            return false;
        if (nums.length == 1)
            return true;
        return isPostOrderOfBSTHelp(nums, 0, nums.length);
    }

    public boolean isPostOrderOfBSTHelp(int[] nums, int l, int r) {
        if (l >= r)
            return true;
        int index = l;
        int rootVal = nums[r];
        while (index < r && nums[index] < rootVal)
            index++;
        if (isRightSubtree(nums, index, r - 1, rootVal)) {
            return isPostOrderOfBSTHelp(nums, l, index - 1)
                    && isPostOrderOfBSTHelp(nums, index, r - 1);
        }
        return false;
    }

    public boolean isRightSubtree(int[] nums, int l, int r, int k) {
        for (int i = l; i <= r; i++) {
            if (nums[i] < k)
                return false;
        }
        return true;
    }

}