public class P78 {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res = new LinkedList<>();
        for(int size = 0; size <= nums.length; size++) {
            backtracking(res, new LinkedList<>(), nums, size, 0);
        }
        return res;
    }

    public void backtracking(List<List<Integer>> res, List<Integer> list, int[] nums, int size, int start) {
        if (list.size() == size) {
            res.add(new LinkedList<>(list));
            return;
        }
        for (int i = start; i < nums.length; i++) {
            list.add(nums[i]);
            backtracking(res, list, nums, size, i + 1);
            list.remove(list.size() - 1);
        }
    }
}