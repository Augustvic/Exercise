public class P309 {
    public int maxProfit(int[] prices) {
        if (prices == null || prices.length == 0)
            return 0;
        int n = prices.length;
        int[] buy = new int[n];
        int[] wait = new int[n];
        int[] sell = new int[n];
        int[] cooldown = new int[n];
        buy[0] = wait[0] = -prices[0];
        sell[0] = cooldown[0] = 0;
        for (int i = 1; i < n; i++) {
            buy[i] = cooldown[i - 1] - prices[i];
            wait[i] = Math.max(buy[i - 1], wait[i - 1]);
            sell[i] = Math.max(buy[i - 1], wait[i - 1) + prices[i];
            cooldown[i] = Math.max(sell[i - 1], cooldown[i - 1]);
        }
        return Math.max(cooldown[n - 1], sell[n - 1]);
    }
}