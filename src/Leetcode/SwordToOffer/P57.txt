public class P57 {
    public boolean find1(int[] nums, int sum) {
        if (nums == null || nums.length == 0)
            return false;
        int left = 0;
        int right = nums.length - 1;
        while (left < right) {
            int tmp = nums[left] + nums[right];
            if (tmp == sum) {
                System.out.println("[" + nums[left] + "," + nums[right] + "]");
                return true;
            }
            else if (tmp > sum) {
                right--;
            }
            else {
                left++;
            }
        }
        return false;
    }

    public ArrayList<ArrayList<Integer>> FindContinuousSequence(int sum) {
        ArrayList<ArrayList<Integer>> ret = new ArrayList<>();
        int l = 1;
        int r = 2;
        int currSum = 3;
        while (l <= r && r < sum) {
            if (currSum == sum) {
                add(ret, l, r);
                currSum -= l;
                l++;
            }
            else if (currSum > sum) {
                currSum -= l;
                l++;
            }
            else {
                r++;
                currSum += r;
            }
        }
        return ret;
    }

    private void add(ArrayList<ArrayList<Integer>> ret, int l, int r) {
        ArrayList<Integer> temp = new ArrayList<>();
        for (int i = l; i <= r; i++)
            temp.add(i);
        ret.add(temp);
    }
}