public class P7 {
    public BinaryTreeNode build(int[] preOrder, int[] inOrder) {
        if (preOrder == null || preOrder.length == 0 || inOrder == null || inOrder.length == 0 || preOrder.length != inOrder.length)
            return null;
        return buildHelp(preOrder, 0, preOrder.length - 1, inOrder, 0, inOrder.length - 1);
    }

    public BinaryTreeNode buildHelp(int[] preOrder, int pl, int pr, int[] inOrder, int il, int ir) {
        if (pl > pr || il > ir)
            return null;
        int val = preOrder[pl];
        BinaryTreeNode root = new BinaryTreeNode(val);
        int index = findIndexInInOrder(inOrder, val);
        root.left = buildHelp(preOrder, pl + 1, pl + index - il, inOrder, il, index - 1);
        root.right = buildHelp(preOrder, pl + index - il + 1, pr, inOrder, index + 1, ir);
        return root;
    }

    public int findIndexInInOrder(int[] arr, int val) {
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == val)
                return i;
        }
        return -1;
    }
}