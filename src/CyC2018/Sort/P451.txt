public class P451 {
    public String frequencySort(String s) {
        if (s == null || s.length() <= 1)
            return s;
        Map<Character, Integer> hm = new HashMap<>();
        for (int i = 0; i < s.length(); i++) {
            int val = 1;
            if (hm.containsKey(s.charAt(i)))
                val = hm.get(s.charAt(i)) + 1;
            hm.put(s.charAt(i), val);
        }
        PriorityQueue<Character> maxHeap = new PriorityQueue<Character>(new Comparator<Character>() {
            @Override
            public int compare(Character c1, Character c2) {
                return hm.get(c2) - hm.get(c1);
            }
        });
        for (Character c : hm.keySet())
            maxHeap.add(c);
        StringBuilder sb = new StringBuilder();
        while (!maxHeap.isEmpty()) {
            Character c = maxHeap.poll();
            for (int val = hm.get(c); val > 0; val--)
                sb.append(c);
        }
        return sb.toString();
    }
}