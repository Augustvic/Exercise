public class P347 {
    public List<Integer> topKFrequent(int[] nums, int k) {
        if (nums == null || nums.length == 0 || k <= 0)
            return null;
        HashMap<Integer, Integer> hm = new HashMap<>();
        for (int num : nums) {
            int val = hm.getOrDefault(num, 0) + 1;
            hm.put(num, val);
        }
        PriorityQueue<Integer> maxHeap = new PriorityQueue<Integer> (new Comparator<Integer>() {
            @Override
            public int compare(Integer i1, Integer i2) {
                return hm.get(i2) - hm.get(i1);
            }
        });
        maxHeap.addAll(hm.keySet());
        List<Integer> ret = new ArrayList<>();
        for (int i = 0; i < k; i++) {
            ret.add(maxHeap.poll());
        }
        return ret;
    }
}