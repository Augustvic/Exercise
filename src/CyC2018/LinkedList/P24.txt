public class P24 {
    public ListNode swapPairs(ListNode head) {
        ListNode node = new ListNode(-1);
        node.next = head;
        ListNode pre = node;
        while (pre.next != null && pre.next.next != null) {
            ListNode l1 = pre.next;
            ListNode l2 = pre.next.next;
            ListNode next = l2.next;
            l1.next = next;
            l2.next = l1;
            pre.next = l2;
            pre = l1;
        }
        return node.next;
    }
	
    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null)
            return head;
        ListNode newHead = head.next;
        ListNode p = head;
        ListNode q = head.next;
        while (q != null) {
            if (q.next != null) {
                ListNode nex = q.next;
                q.next = p;
                p.next = (nex.next == null ? nex : nex.next);
                p = nex;
                q = nex.next;
            }
            else {
                q.next = p;
                p.next = null;
                break;
            }
        }
        return newHead;
    }
}