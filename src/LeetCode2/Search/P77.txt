public class P77 {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new LinkedList<>();
        List<Integer> list = new LinkedList<>();
        backtracking(res, list, n, k, 1);
        return res;
    }

    public void backtracking(List<List<Integer>> res, List<Integer> list, int n, int k, int start) {
        if (k == 0) {
            res.add(new LinkedList<>(list));
            return;
        }
        for (int i = start; i <= n - k + 1; i++) {
            list.add(i);
            backtracking(res, list, n, k - 1, i + 1);
            list.remove(list.size() - 1);
        }
    }
}